name: Notification Handler and publisher

on:
  repository_dispatch:
    types: [merge-conflict,PR-merged,validation,deployment]  # Trigger on PR creation and update

jobs:
  handle_triggered_payload:
    runs-on: ubuntu-latest

    steps:
      - name: Notify on merge conflict
        if: ${{ github.event.action == 'merge-conflict'}}
        run: |
          echo "event type name is : ${{github.event.action}}"
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: token ${{ secrets.PR_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"notify_teams", "client_payload":{ "title" : "Merge Conflict Detected", "text" : "A merge conflict was detected in PR #${{ github.event.client_payload.prNum }} raised by ${{ github.event.client_payload.userName }} targeting branch ${{ github.client_payload.to }} from ${{ github.client_payload.from }}.\n\nView the pull request here: ${{ github.event.client_payload.prUrl }}"}}'

      - name: Send Email on merge conflict
        if: ${{ github.event.action == 'merge-conflict' && (github.event.client_payload.to == 'main' || github.event.client_payload.to == 'release' || github.event.client_payload.to == 'sit')}}
        run: |
          echo "event type name is : ${{github.event.action}}"
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: token ${{ secrets.PR_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"send_email", "client_payload":{ "emailSubject" : "Merge Conflict Detected in PR #${{ github.event.client_payload.prNum }}", "emailBody" : "A merge conflict was detected in PR #${{ github.event.client_payload.prNum }} raised by ${{ github.event.client_payload.userName }} targeting branch ${{ github.client_payload.to }} from ${{ github.client_payload.from }}.\n\nView the pull request here: ${{ github.event.client_payload.prUrl }}"}}'
